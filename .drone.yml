---
kind: pipeline
type: docker
name: build tagged commit

trigger:
  event:
  - tag

steps:

- name: Validate composer syntax
  image: webdevops/php-nginx:8.0
  commands:
  - cd docker
  - composer --no-interaction validate

- name: Validate shell scripts syntax
  image: koalaman/shellcheck-alpine
  environment:
    SHELLCHECK_OPTS: "-e SC2154"
  commands:
  - find -type f -iname '*.sh' -exec shellcheck {} +

- name: Build LEDStrain docker image and push to registry
  image: plugins/docker
  settings:
    use_cache: true
    squash: true
    repo:
      from_secret: DOCKER_REGISTRY_REPO
    username:
      from_secret: DOCKER_REGISTRY_USERNAME
    password:
      from_secret: DOCKER_REGISTRY_PASSWORD
    registry:
      from_secret: DOCKER_REGISTRY_URL
    build_args_from_env:
      - EXTIVERSE_TOKEN
      - GIT_COMMIT
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}
      - ${DRONE_TAG}
    dockerfile: docker/Dockerfile
    context: docker/
    target: production
  environment:
    EXTIVERSE_TOKEN:
      from_secret: EXTIVERSE_TOKEN
    GIT_COMMIT: ${DRONE_COMMIT_SHA}

---
kind: pipeline
type: docker
name: build and stage

trigger:
  branch:
  - staging

steps:

- name: Validate composer syntax
  image: webdevops/php-nginx:8.0
  commands:
  - cd docker
  - composer --no-interaction validate

- name: Validate shell scripts syntax
  image: koalaman/shellcheck-alpine
  environment:
    SHELLCHECK_OPTS: "-e SC2154"
  commands:
  - find -type f -iname '*.sh' -exec shellcheck {} +

- name: Build LEDStrain docker image and push to registry
  image: plugins/docker
  settings:
    use_cache: true
    squash: true
    repo:
      from_secret: DOCKER_REGISTRY_REPO
    username:
      from_secret: DOCKER_REGISTRY_USERNAME
    password:
      from_secret: DOCKER_REGISTRY_PASSWORD
    registry:
      from_secret: DOCKER_REGISTRY_URL
    build_args_from_env:
    - EXTIVERSE_TOKEN
    - GIT_COMMIT
    tags:
    - latest
    - ${DRONE_COMMIT_SHA}
    dockerfile: docker/Dockerfile
    context: docker/
    target: production
  environment:
    EXTIVERSE_TOKEN:
      from_secret: EXTIVERSE_TOKEN
    GIT_COMMIT: ${DRONE_COMMIT_SHA}

- name: Deploy to staging
  image: plugins/ansible:3
  environment:
    stage: staging
  settings:
    playbook: ansible/deployment.yml
    galaxy: ansible/requirements.yml
    inventory: ansible/inventory
    vault_password:
      from_secret: ANSIBLE_VAULT_PASSWORD
    private_key:
      from_secret: DRONE_SSH_PRIVATE
    extra_vars:
      version=${DRONE_COMMIT_SHA}
      stage="staging"
    tags:
    - staging

---
kind: pipeline
type: docker
name: deploy to production

trigger:
  branch:
  - production

steps:

- name: Deploy to production
  image: plugins/ansible:3
  environment:
    stage: production
  settings:
    playbook: ansible/deployment.yml
    galaxy: ansible/requirements.yml
    inventory: ansible/inventory
    vault_password:
      from_secret: ANSIBLE_VAULT_PASSWORD
    private_key:
      from_secret: DRONE_SSH_PRIVATE
    extra_vars:
      version=${DRONE_COMMIT_SHA}
      stage="production"
    tags:
      - production

---
kind: signature
hmac: 0cce4a5bd192770311e3b75eae380b886f10ae410cbeb6e3c4ba55c877eb2907

...
